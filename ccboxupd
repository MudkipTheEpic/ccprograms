local args={...}
local draw = true
if args[2]=="noborder" then
	draw=false
end
print("Building vm for "..args[1])
local vm=args[1]
if not fs.isDir(vm) then
error("Please ensure that the folder passed is a folder", 0)
end
local pass="CCBOX:"..math.random()
chrootapi.chroot(vm, pass)
if not fs.exists("/rom/programs/shell") then
chrootapi.unchroot(pass)
error("Please ensure that the folder passed contains /rom/programs/shell", 0)
end

local vmstat="LOADING"

local x,y=term.getSize()
if draw then
	y=y-1
end
local vmredirect=redirect.createRedirectBuffer(x,y,colors.white,colors.black,true)

local oldshutdown=os.shutdown
local oldreboot=os.reboot

os.shutdown=function()
vmstat="Shutting down"
while true do
coroutine.yield()
end
end

os.reboot=function()
vmstat="Rebooting"
while true do
coroutine.yield()
end
end

function launchVM()
goroutine.kill("vm")
vmstat="Running"
goroutine.spawnWithRedirect("vm",doVM,vmredirect)
end

function doDRAW()
while true do
sleep(0.01)

vmredirect.blit()

if draw then

term.setCursorPos(1,y)
term.setBackgroundColor(colors.gray)
term.clearLine()
term.setCursorPos(1,y)

term.write("CCBox:"..vmstat)

term.setCursorPos(x,y)
term.setBackgroundColor(colors.red)
term.write("X")
term.setCursorPos(x-1,y)
term.setBackgroundColor(colors.orange)
term.write("S")
term.setCursorPos(x-2,y)
term.setBackgroundColor(colors.lime)
term.write("B")

end

term.setCursorBlink(vmredirect.cursorBlink)
term.setCursorPos(vmredirect.curX, vmredirect.curY)

end
end

function doEVENT()
while true do
local e={ os.pullEvent() }
if e[1]=="mouse_click" or e[1]=="mouse_drag" then
if e[4]==y then
if e[3]==x then
--Exit
vmstat="EXITING"
elseif e[3]==x-1 then
--Shutdown VM
vmstat="Shutting down"
elseif e[3]==x-2 then
--Boot VM
vmstat="Booting"
end
else
goroutine.passEvent()
end
else
goroutine.passEvent()
end
end
end

function doVMPOWER()
while true do
sleep(0.1)
if vmstat=="Shutting down" then
goroutine.kill("vm")
vmstat="Stopped"
elseif vmstat=="Rebooting" then
vmstat="Booting"
vmredirect=redirect.createRedirectBuffer(x,y,colors.white,colors.black,true)
goroutine.kill("vm")
elseif vmstat=="Booting" then
launchVM()
end
end
end

function doVM()
os.run({}, "/rom/programs/shell")
os.shutdown()
end

function doMAIN()
goroutine.spawn("draw", doDRAW)
if draw then
goroutine.spawn("tick", doEVENT)
goroutine.assignEvent("tick","mouse_drag")
goroutine.assignEvent("tick","mouse_click")
end
goroutine.spawn("power", doVMPOWER)
if draw then
	vmstat="Stopped"
else
	vmstat="Booting"
end
while true do
sleep(0.1)
if vmstat=="EXITING" then
return
end
end
end

goroutine.run(doMAIN)
chrootapi.unchroot(pass)

os.reboot=oldreboot
os.shutdown=oldshutdown